<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" verticalGap="2">
	<mx:HBox width="100%" horizontalGap="2">
		<mx:Label
			toolTip="Use this control to height of view."
			text="Zoom:"
			styleName="graphControlLabel"
			/>
		<mx:Label text="{bzoom.value.toFixed(2)}" styleName="graphControlHighlight" />
	</mx:HBox>
	
		
	<mx:HSlider
		tickInterval=".25"
		width="100%"
		id="bzoom"
		minimum=".25"
		maximum="2"
		liveDragging="true"
		change="updateVScale()"
		styleName="filterSlider"
		/>

	<mx:Script>
		<![CDATA[
			import classes.datastructures.GraphData;
			import org.un.cava.birdeye.ravis.utils.events.VGraphEvent;
			import org.un.cava.birdeye.ravis.graphLayout.visual.VisualGraph;
			import org.un.cava.birdeye.ravis.assets.icons.EmbeddedIcons;
			
			private var _vgraph:VisualGraph;
			private var _graphData:GraphData;
			
			/**
			 * The <code>vgraph</code> the control acts on.
			 */ 
			public function get vgraph():VisualGraph {
				return _vgraph;
			}			

			/**
			 * @private
			 */
			public function set vgraph(v:VisualGraph):void {
				_vgraph = v;
				registerListeners();
			}
			
			/**
			 * The <code>GraphData</code> instance this control acts on.
			 * 
			 * @see classes.datastructures.GraphData
			 */ 
			[Bindable]
			public function get graphData():GraphData
			{
				return _graphData;
			}
			
			/**
			 * @private
			 */
			public function set graphData(graph:GraphData):void
			{
				_graphData = graph;
				
				if( isNaN(_graphData.zoom) ) {
					bzoom.value = 1;
				} else {
					bzoom.value = _graphData.zoom; 
				}
				
				updateVScale();
					
			}
			
			
			/**
			 * Update the scale of the <code>vgraph</code>.
			 * 
			 * <p>Sets the following properties:</p>
			 * 
			 * <code>
			 * <ul>
			 * <li>graphData.zoom</li>
			 * <li>vgraph.scale</li>
			 * </ul>
			 * </code>
			 */		
			public function updateVScale():void {
				if(bzoom == null) {
					return;
				}
				
				if(_vgraph == null) {
					trace("BirdEyeZoom NOT changed, no valid vgraph!");
					return;
				}
				_graphData.zoom = bzoom.value;
				_vgraph.scale = bzoom.value;
			}
			
			/**
			 * Sets the slider value to <code>vgraph.scale</code> value.
			 */
			public function refreshVScale(e:VGraphEvent = null):void {
				if(bzoom == null) {
					return;
				}
				if(_vgraph == null) {
					trace("BirdEyeZoom NOT refreshed, no valid vgraph!");
					return;
				}
				bzoom.value = _vgraph.scale;
			}
			
			/**
			 * register listeners
			 * */
			private function registerListeners():void {
				_vgraph.addEventListener(VGraphEvent.VGRAPH_CHANGED,refreshVScale);
			}
		]]>
	</mx:Script>
</mx:VBox>
