<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" verticalGap="2">
	
	<mx:HBox width="100%" horizontalGap="2">
		<mx:Label
			toolTip="Use this control to increase/decrease text/icon size."
			text="Label Scale:"
			styleName="graphControlLabel"
			/>
		<mx:Label text="{scaleSlider.value}" styleName="graphControlHighlight" />
	</mx:HBox>	
	<mx:HSlider
		tickInterval=".25"
		width="100%"
		id="scaleSlider"
		minimum=".5"
		maximum="2.0"
		snapInterval=".1"
		liveDragging="true"
		styleName="filterSlider"
		change="updateScale()"
		/>
	<mx:Script>
		<![CDATA[
			import classes.datastructures.GraphData;
			import flash.utils.describeType;
			import org.un.cava.birdeye.ravis.utils.events.VGraphEvent;
			import mx.core.Container;
			import mx.core.UIComponent;
			import org.un.cava.birdeye.ravis.graphLayout.visual.VisualGraph;
			import org.un.cava.birdeye.ravis.assets.icons.EmbeddedIcons;
			
			private var _vgraph:VisualGraph;
			private var _graphData:GraphData;
			
			/**
			 * The <code>vgraph</code> the control acts on.
			 */
			[Bindable]
			public function get vgraph():VisualGraph {
				return _vgraph;
			}
			
			/**
			 * @private
			 */
			public function set vgraph(v:VisualGraph):void {
				_vgraph = v;
			}

			/**
			 * The <code>GraphData</code> instance this control acts on.
			 * 
			 * @see classes.datastructures.GraphData
			 */ 
			[Bindable]
			public function get graphData():GraphData
			{
				return _graphData;
			}
			
			/**
			 * @private
			 */
			public function set graphData(graph:GraphData):void
			{
				_graphData = graph;
				
				if(isNaN(_graphData.labelScale)) {
					scaleSlider.value = 1;
				} else { 
					scaleSlider.value = _graphData.labelScale;
				}
				
				updateScale();
			}

			/**
			 * Updates the scale factor of the visua node labels in the <code>vgraph</code>.
			 * 
			 * <p>Updates the following properties:</p>
			 * <code>
			 * <ul>
			 * <li>vgraph.labelScaleFactor</li>
			 * <li>graphData.labelScale</li>
			 * <li>vgraph.layouter.layoutChanged = true</li>
			 * </ul>
			 * </code>
			 * 
			 * <p>And calls the <code>vgraph.draw()</code> method to commit the changes.</p>
			 */	
			public function updateScale():void {
				
				var children:Array;
				var child:UIComponent;

				if(_vgraph == null) {
					trace("Cannot update Scale of VGraph, no valid vgraph!");
					return;
				}
	
				children = _vgraph.getChildren();
				
				_vgraph.labelScaleFactor = scaleSlider.value;
				_graphData.labelScale = scaleSlider.value;
				
				/* check if we have a layouter at all */
				if(_vgraph.layouter != null) {
					_vgraph.layouter.layoutChanged = true;
				} else {
					trace("Cannot notify null layouter of layout change due to scaling.");
				}
				_vgraph.draw();
			}
			
		]]>
	</mx:Script>
</mx:VBox>
