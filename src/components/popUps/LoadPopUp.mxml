<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:com="*"
	styleName="dataLoader"	
	horizontalAlign="center"
	verticalAlign="middle"
	horizontalGap="5"
	creationComplete="initComp()"
	>
	
	<mx:Script>
		<![CDATA[
			import mx.events.EffectEvent;
			import mx.controls.LinkButton;
			import mx.controls.Image;
			import mx.states.AddChild;
			import mx.managers.CursorManager;
			import mx.controls.Spacer;
			import mx.controls.Button;
		
			import classes.events.*;
			import mx.managers.PopUpManager;
			

			/**
			 * Dispatched when the cancel button is clicked.
			 * 
			 * @eventType flash.events.Event
			 */
			[Event(name="cancelLoad", type="flash.events.Event")]
			
			private var _open:Boolean;
			private var _cancelBut:LinkButton;
			
			[Bindable]
			[Embed(source="/assets/img/close.png")]
            private var cancelIcon:Class;
			
			private function initComp():void
			{
				PopUpManager.centerPopUp(this);
				showHide.play([this]);
				prog_bar.invalidateSize();
				
				this.addEventListener(MouseEvent.MOUSE_OVER, removeBusyCursor);
				this.addEventListener(MouseEvent.MOUSE_OUT, setBusyCursor);
				
				_open = true;
				
			}
			
			/**
			 * Close this popUp.
			 */
			public function closeThis():void
			{
				addEventListener(EffectEvent.EFFECT_END, removeThis);
				showHide.play([this],true);
			}
			
			/**
			 * Remove the popup without playing the effect.
			 */
			private function removeThis(event:EffectEvent):void
			{
				
				this.removeEventListener(MouseEvent.MOUSE_OVER, removeBusyCursor);
				this.removeEventListener(MouseEvent.MOUSE_OUT, setBusyCursor);
				CursorManager.removeBusyCursor();
				
				_open = false;
				PopUpManager.removePopUp(this);
					
			}
			
			/**
			 * Set to <code>true</code> to have a cancel button which dispatches a bubbeling <code>cancelLoad</code> event when clicked.
			 * 
			 * @param cancel Show cancel button or not.
			 */
			public function set cancelable(cancel:Boolean):void
			{
				if(cancel) {
					
					_cancelBut = new LinkButton();
					_cancelBut.id = 'cancelBut';
					_cancelBut.setStyle("icon", cancelIcon);
					_cancelBut.setStyle("rollOverColor", 0xFFFFFF);
					_cancelBut.setStyle("selectionColor", 0xFFFFFF);
					_cancelBut.addEventListener(MouseEvent.CLICK, cancelLoad);
					_cancelBut.toolTip = "Cancel data load"; 
					
					addChild(_cancelBut);
					
				} else {
					if( _cancelBut != null && this.contains(_cancelBut) )
					{
						this.removeChild( _cancelBut);
					}
				}
			}
			
			/**
			 * Cancel the load process.
			 */
			private function cancelLoad(event:MouseEvent):void
			{
				dispatchEvent( new Event("cancelLoad") );
			}
			
			/**
			 * @private
			 */
			private function setBusyCursor(event:MouseEvent):void
			{
				CursorManager.setBusyCursor();
			}
			
			/**
			 * @private
			 */
			private function removeBusyCursor(event:MouseEvent):void
			{
				CursorManager.removeBusyCursor();
			}
			/**
			 * True if popUp is open.
			 */
			public function get open():Boolean
			{
				return _open;
			}
			
			/**
			 * The label shown below the progress bar. Three dots will be trailed. 
			 */
			public function set loadLabel(value:String):void
			{
				prog_bar.label = value + " ...";
			}
			
			/**
			 * @private
			 */
			public function get loadLabel():String
			{
				return prog_bar.label;
			}
		]]>
	</mx:Script>
	
	<mx:Parallel id="showHide">
		<mx:children>
			<mx:Fade alphaFrom="0" alphaTo="1" duration="500" />
			<mx:Zoom zoomWidthFrom="0" zoomWidthTo="1" zoomHeightFrom="0" zoomHeightTo="1" duration="500" /> 		
		</mx:children>
	</mx:Parallel>
	
    
	<mx:ProgressBar id="prog_bar" styleName="dataLoaderPB" labelPlacement="bottom" 
		height="20" indeterminate="true" 
		/>

</mx:HBox>
